/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: protobuf/ZeroPlane.proto */

#ifndef PROTOBUF_C_protobuf_2fZeroPlane_2eproto__INCLUDED
#define PROTOBUF_C_protobuf_2fZeroPlane_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1000001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _ZeroPlaneMsg ZeroPlaneMsg;
typedef struct _Attitude Attitude;
typedef struct _Airplane Airplane;


/* --- enums --- */


/* --- messages --- */

struct  _ZeroPlaneMsg
{
  ProtobufCMessage base;
  Attitude *attitude;
  Airplane *airplane;
};
#define ZERO_PLANE_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&zero_plane_msg__descriptor) \
    , NULL, NULL }


struct  _Attitude
{
  ProtobufCMessage base;
  float pitch;
  float roll;
  float yaw;
  float altitude;
  float vertical_speed;
  float heading;
};
#define ATTITUDE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&attitude__descriptor) \
    , 0, 0, 0, 0, 0, 0 }


struct  _Airplane
{
  ProtobufCMessage base;
  int32_t plane_num;
  char *tailnum;
  protobuf_c_boolean has_stallwarn;
  float vso;
  float vs;
  float vfe;
  float vno;
  float vne;
};
#define AIRPLANE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&airplane__descriptor) \
    , 0, NULL, 0, 0, 0, 0, 0, 0 }


/* ZeroPlaneMsg methods */
void   zero_plane_msg__init
                     (ZeroPlaneMsg         *message);
size_t zero_plane_msg__get_packed_size
                     (const ZeroPlaneMsg   *message);
size_t zero_plane_msg__pack
                     (const ZeroPlaneMsg   *message,
                      uint8_t             *out);
size_t zero_plane_msg__pack_to_buffer
                     (const ZeroPlaneMsg   *message,
                      ProtobufCBuffer     *buffer);
ZeroPlaneMsg *
       zero_plane_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   zero_plane_msg__free_unpacked
                     (ZeroPlaneMsg *message,
                      ProtobufCAllocator *allocator);
/* Attitude methods */
void   attitude__init
                     (Attitude         *message);
size_t attitude__get_packed_size
                     (const Attitude   *message);
size_t attitude__pack
                     (const Attitude   *message,
                      uint8_t             *out);
size_t attitude__pack_to_buffer
                     (const Attitude   *message,
                      ProtobufCBuffer     *buffer);
Attitude *
       attitude__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   attitude__free_unpacked
                     (Attitude *message,
                      ProtobufCAllocator *allocator);
/* Airplane methods */
void   airplane__init
                     (Airplane         *message);
size_t airplane__get_packed_size
                     (const Airplane   *message);
size_t airplane__pack
                     (const Airplane   *message,
                      uint8_t             *out);
size_t airplane__pack_to_buffer
                     (const Airplane   *message,
                      ProtobufCBuffer     *buffer);
Airplane *
       airplane__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   airplane__free_unpacked
                     (Airplane *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ZeroPlaneMsg_Closure)
                 (const ZeroPlaneMsg *message,
                  void *closure_data);
typedef void (*Attitude_Closure)
                 (const Attitude *message,
                  void *closure_data);
typedef void (*Airplane_Closure)
                 (const Airplane *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor zero_plane_msg__descriptor;
extern const ProtobufCMessageDescriptor attitude__descriptor;
extern const ProtobufCMessageDescriptor airplane__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_protobuf_2fZeroPlane_2eproto__INCLUDED */
